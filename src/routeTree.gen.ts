/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

import { Route as rootRouteImport } from './routes/__root'
import { Route as IndexRouteImport } from './routes/index'
import { Route as CalcSettingsRouteImport } from './routes/calc/settings'
import { Route as CalcPathRouteImport } from './routes/calc/path'
import { Route as CalcJumpRouteImport } from './routes/calc/jump'
import { Route as CalcFuelcostRouteImport } from './routes/calc/fuelcost'
import { Route as CalcFuelRouteImport } from './routes/calc/fuel'
import { Route as CalcExitRouteImport } from './routes/calc/exit'
import { Route as CalcDistRouteImport } from './routes/calc/dist'
import { Route as CalcBasematsRouteImport } from './routes/calc/basemats'

const AboutLazyRouteImport = createFileRoute('/about')()

const AboutLazyRoute = AboutLazyRouteImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRouteImport,
} as any).lazy(() => import('./routes/about.lazy').then((d) => d.Route))
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const CalcSettingsRoute = CalcSettingsRouteImport.update({
  id: '/calc/settings',
  path: '/calc/settings',
  getParentRoute: () => rootRouteImport,
} as any)
const CalcPathRoute = CalcPathRouteImport.update({
  id: '/calc/path',
  path: '/calc/path',
  getParentRoute: () => rootRouteImport,
} as any)
const CalcJumpRoute = CalcJumpRouteImport.update({
  id: '/calc/jump',
  path: '/calc/jump',
  getParentRoute: () => rootRouteImport,
} as any)
const CalcFuelcostRoute = CalcFuelcostRouteImport.update({
  id: '/calc/fuelcost',
  path: '/calc/fuelcost',
  getParentRoute: () => rootRouteImport,
} as any)
const CalcFuelRoute = CalcFuelRouteImport.update({
  id: '/calc/fuel',
  path: '/calc/fuel',
  getParentRoute: () => rootRouteImport,
} as any)
const CalcExitRoute = CalcExitRouteImport.update({
  id: '/calc/exit',
  path: '/calc/exit',
  getParentRoute: () => rootRouteImport,
} as any)
const CalcDistRoute = CalcDistRouteImport.update({
  id: '/calc/dist',
  path: '/calc/dist',
  getParentRoute: () => rootRouteImport,
} as any)
const CalcBasematsRoute = CalcBasematsRouteImport.update({
  id: '/calc/basemats',
  path: '/calc/basemats',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/about': typeof AboutLazyRoute
  '/calc/basemats': typeof CalcBasematsRoute
  '/calc/dist': typeof CalcDistRoute
  '/calc/exit': typeof CalcExitRoute
  '/calc/fuel': typeof CalcFuelRoute
  '/calc/fuelcost': typeof CalcFuelcostRoute
  '/calc/jump': typeof CalcJumpRoute
  '/calc/path': typeof CalcPathRoute
  '/calc/settings': typeof CalcSettingsRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/about': typeof AboutLazyRoute
  '/calc/basemats': typeof CalcBasematsRoute
  '/calc/dist': typeof CalcDistRoute
  '/calc/exit': typeof CalcExitRoute
  '/calc/fuel': typeof CalcFuelRoute
  '/calc/fuelcost': typeof CalcFuelcostRoute
  '/calc/jump': typeof CalcJumpRoute
  '/calc/path': typeof CalcPathRoute
  '/calc/settings': typeof CalcSettingsRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/about': typeof AboutLazyRoute
  '/calc/basemats': typeof CalcBasematsRoute
  '/calc/dist': typeof CalcDistRoute
  '/calc/exit': typeof CalcExitRoute
  '/calc/fuel': typeof CalcFuelRoute
  '/calc/fuelcost': typeof CalcFuelcostRoute
  '/calc/jump': typeof CalcJumpRoute
  '/calc/path': typeof CalcPathRoute
  '/calc/settings': typeof CalcSettingsRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/about'
    | '/calc/basemats'
    | '/calc/dist'
    | '/calc/exit'
    | '/calc/fuel'
    | '/calc/fuelcost'
    | '/calc/jump'
    | '/calc/path'
    | '/calc/settings'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/about'
    | '/calc/basemats'
    | '/calc/dist'
    | '/calc/exit'
    | '/calc/fuel'
    | '/calc/fuelcost'
    | '/calc/jump'
    | '/calc/path'
    | '/calc/settings'
  id:
    | '__root__'
    | '/'
    | '/about'
    | '/calc/basemats'
    | '/calc/dist'
    | '/calc/exit'
    | '/calc/fuel'
    | '/calc/fuelcost'
    | '/calc/jump'
    | '/calc/path'
    | '/calc/settings'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AboutLazyRoute: typeof AboutLazyRoute
  CalcBasematsRoute: typeof CalcBasematsRoute
  CalcDistRoute: typeof CalcDistRoute
  CalcExitRoute: typeof CalcExitRoute
  CalcFuelRoute: typeof CalcFuelRoute
  CalcFuelcostRoute: typeof CalcFuelcostRoute
  CalcJumpRoute: typeof CalcJumpRoute
  CalcPathRoute: typeof CalcPathRoute
  CalcSettingsRoute: typeof CalcSettingsRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutLazyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/calc/settings': {
      id: '/calc/settings'
      path: '/calc/settings'
      fullPath: '/calc/settings'
      preLoaderRoute: typeof CalcSettingsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/calc/path': {
      id: '/calc/path'
      path: '/calc/path'
      fullPath: '/calc/path'
      preLoaderRoute: typeof CalcPathRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/calc/jump': {
      id: '/calc/jump'
      path: '/calc/jump'
      fullPath: '/calc/jump'
      preLoaderRoute: typeof CalcJumpRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/calc/fuelcost': {
      id: '/calc/fuelcost'
      path: '/calc/fuelcost'
      fullPath: '/calc/fuelcost'
      preLoaderRoute: typeof CalcFuelcostRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/calc/fuel': {
      id: '/calc/fuel'
      path: '/calc/fuel'
      fullPath: '/calc/fuel'
      preLoaderRoute: typeof CalcFuelRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/calc/exit': {
      id: '/calc/exit'
      path: '/calc/exit'
      fullPath: '/calc/exit'
      preLoaderRoute: typeof CalcExitRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/calc/dist': {
      id: '/calc/dist'
      path: '/calc/dist'
      fullPath: '/calc/dist'
      preLoaderRoute: typeof CalcDistRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/calc/basemats': {
      id: '/calc/basemats'
      path: '/calc/basemats'
      fullPath: '/calc/basemats'
      preLoaderRoute: typeof CalcBasematsRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AboutLazyRoute: AboutLazyRoute,
  CalcBasematsRoute: CalcBasematsRoute,
  CalcDistRoute: CalcDistRoute,
  CalcExitRoute: CalcExitRoute,
  CalcFuelRoute: CalcFuelRoute,
  CalcFuelcostRoute: CalcFuelcostRoute,
  CalcJumpRoute: CalcJumpRoute,
  CalcPathRoute: CalcPathRoute,
  CalcSettingsRoute: CalcSettingsRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
